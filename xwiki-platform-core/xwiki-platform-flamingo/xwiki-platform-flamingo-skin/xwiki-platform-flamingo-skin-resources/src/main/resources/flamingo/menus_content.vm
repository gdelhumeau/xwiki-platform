###########################################
##                GLOBALS
###########################################
#set ($canView = !$doc.isNew() && $xwiki.hasAccessLevel('view'))
#set ($canCopy = $canView && $hasCreatePage)
#set ($canDelete = !$doc.isNew() && $xwiki.hasAccessLevel('delete'))
#set ($canShare = $canView && $xwiki.exists('XWiki.SharePage') && !$isGuest)
###########################################
##            MENU CONTENT
###########################################
<div id="contentmenu" class="pull-right actionmenu">
  #if ($hasEdit && !$isReadOnly)
    #displayEditMenu()
  #end
  #if ($hasCreatePage)
    #displayCreateButton()
  #end
  #diplayOptionsMenu()
  #if ($canView)
    #exportModal()
  #end
  #if($keyboardShortcutsEnabled)
    #keyboardShortcuts()
  #end
</div>
###########################################
##        DISPLAY CREATE BUTTON
###########################################
#macro(displayCreateButton)
  <div class="dropdown" id="tmCreate">
    <a href="$doc.getURL('create')" role="button"><span class="glyphicon glyphicon-plus"></span></a>
  </div>
#end
###########################################
##         DISPLAY EDIT MENU
###########################################
#macro(displayEditMenu)
  <div class="dropdown" id="tmEdit">
    #set($defaultEditURL = $doc.getURL($doc.getDefaultEditMode(), $!languageparams))
    <a href="$defaultEditURL" #if ($isAdvancedUser)data-toggle="dropdown"#end role="button"><span class="glyphicon glyphicon-pencil"></span></a>
    #if ($isAdvancedUser)
    <ul class="dropdown-menu">
      #submenuitem($defaultEditURL, $services.localization.render('core.menu.edit'), 'tmEditDefault', '', 'pencil')
      #submenuseparator()
      ## Check if the WYSIWYG supports the current document's syntax and if so add a menu entry to edit the current
      ## document with the WYSIWYG editor.
      #if ($services.wysiwyg.isSyntaxSupported($tdoc.syntax.toIdString()) || $tdoc.syntax.toIdString() == 'xwiki/1.0')
        #submenuitem($doc.getURL('edit', "$!{languageparams}#if ($languageparams != '')&amp;#{end}editor=wysiwyg") $services.localization.render('core.menu.edit.wysiwyg') 'tmEditWysiwyg', '', 'pencil')
      #end
      #submenuitem($doc.getURL('edit', "$!{languageparams}#if ($languageparams != '')&amp;#{end}editor=wiki") $services.localization.render('core.menu.edit.wiki') 'tmEditWiki', '', 'wrench')
      #submenuitem($doc.getURL('edit', "$!{languageparams}#if ($languageparams != '')&amp;#{end}editor=inline") $services.localization.render('core.menu.edit.inline') 'tmEditInline', '', 'list-alt')
    </ul>
    #end
  </div>
#end
###########################################
##         DISPLAY ACTIONS MENU
###########################################
#macro(diplayOptionsMenu)
  <div class="dropdown" id="tmMoreActions">
    <a href="" data-toggle="dropdown" role="button"><span class="glyphicon glyphicon-option-vertical"></span></a>
    <ul class="dropdown-menu">
      ## WATCH /UNWATCH
      #if (!$doc.isNew() && $hasWatch)
        #set ($watchClasses = '')
        #set ($unwatchClasses = 'hidden')
        #if ($services.watchlist.isWatched("DOCUMENT"))
          #set ($watchClasses = 'hidden')
          #set ($unwatchClasses = '')
        #end
        #submenuitem("$xwiki.getURL($doc.documentReference, 'view', 'xpage=watch&amp;do=adddocument')&amp;xredirect=$escapetool.url($xwiki.getURL($doc.documentReference))" $services.localization.render('core.menu.watchlist.add.page') 'tmWatchDocument' $watchClasses 'eye-open')
        #submenuitem("$xwiki.getURL($doc.documentReference, 'view', 'xpage=watch&amp;do=removedocument')&amp;xredirect=$escapetool.url($xwiki.getURL($doc.documentReference))" $services.localization.render('core.menu.watchlist.remove.page') 'tmUnwatchDocument' $unwatchClasses 'eye-close')
        #submenuseparator()
      #end
      ## COPY
      #if ($canCopy)
        #submenuitem($xwiki.getURL($doc.documentReference, 'view', 'xpage=copy') $services.localization.render('core.menu.copy') 'tmActionCopy', '' 'share')
      #end
      ## DELETE
      #if ($canDelete)
        #submenuitem($xwiki.getURL($doc.documentReference, 'view', 'xpage=rename&amp;step=1') $services.localization.render('core.menu.rename') 'tmActionRename', '' 'edit')
        #submenuitem($xwiki.getURL($doc.documentReference, 'delete', $!languageparams) $services.localization.render('core.menu.delete') 'tmActionDelete', '', 'remove')
      #end
      #if ($canCopy || $canDelete)
        #submenuseparator()
      #end
      ## Export
      #if ($canView)
        #submenuitem('' $services.localization.render('core.menu.export') 'tmExport', '', 'download-alt', 'data-toggle="modal" data-target="#exportModal"')
        ## Print
        #submenuitem($doc.getURL('view', "xpage=print&amp;$!escapetool.html($request.getQueryString())") $services.localization.render('core.menu.preview') 'tmPrintPreview', '', 'print')
        ## View source
        #submenuitem($doc.getURL('view', "viewer=code") $services.localization.render('core.menu.view.source') 'tmViewSource', '', 'search')
        ## Share by email      
        #if ($canShare)
          #submenuitem($xwiki.getURL($doc.documentReference, 'view', 'viewer=share') $services.localization.render('core.menu.share') 'tmActionShare', '', 'envelope')
          #userPicker_import()
          $xwiki.jsx.use('XWiki.SharePage')
          $xwiki.ssx.use('XWiki.SharePage')
        #end
      #end
      #if($hasEdit && !$isReadOnly && $isAdvancedUser)
        #if ($canView)
          #submenuseparator()
        #end
        ## Rights
        #submenuitem($doc.getURL('edit', 'editor=rights') $services.localization.render('core.menu.edit.rights') 'tmEditRights', '', 'lock')
        ## Objects
        #submenuitem($doc.getURL('edit', 'editor=object') $services.localization.render('core.menu.edit.object') 'tmEditObject', '', 'hdd')
        ## Class
        #submenuitem($doc.getURL('edit', 'editor=class') $services.localization.render('core.menu.edit.class') 'tmEditClass', '', 'hdd')
      #end
      ## ----------------------------
      ## Display the shortcuts
      ## ----------------------------
      #if($canView && $displayShortcuts)
        #submenuseparator()
        #template("shortcuts.vm")
      #end
    </ul>
  </div>
#end
###########################################
##          KEYBOARD SHORTCUTS
###########################################
#macro(keyboardShortcuts)
  <script type="text/javascript">
  //<![CDATA[
    #if ($hasEdit && !$isReadOnly)
      shortcut.add("$services.localization.render('core.shortcuts.view.edit')",function() { location.href=$('tmEdit').down('a').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      #if($isAdvancedUser)
        shortcut.add("$services.localization.render('core.shortcuts.view.wiki')",function() { location.href=$('tmEditWiki').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        shortcut.add("$services.localization.render('core.shortcuts.view.wysiwyg')",function() { location.href=$('tmEditWysiwyg').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        shortcut.add("$services.localization.render('core.shortcuts.view.inline')",function() { location.href=$('tmEditInline').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        shortcut.add("$services.localization.render('core.shortcuts.view.rights')",function() { location.href=$('tmEditRights').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        shortcut.add("$services.localization.render('core.shortcuts.view.objects')",function() { location.href=$('tmEditObject').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        #if($hasAdmin)
          shortcut.add("$services.localization.render('core.shortcuts.view.class')",function() { location.href=$('tmEditClass').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
        #end
      #end
    #end
    #if ($canDelete)
      shortcut.add("$services.localization.render('core.shortcuts.view.delete')",function() { location.href=$('tmActionDelete').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      shortcut.add("$services.localization.render('core.shortcuts.view.rename')",function() { location.href=$('tmActionRename').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
    #end
  //]]>
  </script>
#end
###########################################
##            EXPORT MODAL
###########################################
#macro(exportModal)
  <div class="modal fade text-left" id="exportModal" tabindex="-1" role="dialog" aria-labelledby="exportModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          <h4 class="modal-title" id="exportModalLabel">$services.localization.render('core.menu.export')</h4>
        </div>
        <div class="modal-body">
          <a href="$doc.getURL('view', "xpage=pdfoptions&amp;qs=$!escapetool.url($request.getQueryString())")" class="btn btn-primary">$services.localization.render('core.menu.export.pdf')</a>
          #if("$!{services.officemanager.serverState}" == "Connected")
            <a href="$doc.getURL('export', "format=odt&amp;$!escapetool.html($request.getQueryString())")" class="btn btn-primary">$services.localization.render('core.menu.export.odt')</a>
            <a href="$doc.getURL('export', "format=rtf&amp;$!escapetool.html($request.getQueryString())")" class="btn btn-primary">$services.localization.render('core.menu.export.rtf')</a>
          #end
          <a href="$doc.getURL('export', "format=html&amp;$!escapetool.html($request.getQueryString())")" class="btn btn-primary">$services.localization.render('core.menu.export.html')</a>
          #if($hasAdmin && "$!xwiki.getPlugin('package')" != '')
            <a href="$doc.getURL('export', "format=xar&amp;name=$escapetool.url($doc.fullName)&amp;pages=$escapetool.url($services.model.serialize($doc.getDocumentReference(),'default'))&amp;$!docvariant")" class="btn btn-primary">$services.localization.render('core.menu.export.xar')</a>
          #end
          <button type="button" class="btn btn-default" data-dismiss="modal">$services.localization.render('cancel')</button>
        </div>
      </div>
    </div>
  </div>
#end
