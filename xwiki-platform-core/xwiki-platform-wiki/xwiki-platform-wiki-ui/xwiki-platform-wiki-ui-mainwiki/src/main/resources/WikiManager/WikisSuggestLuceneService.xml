<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>WikiManager</web>
  <name>WikisSuggestLuceneService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>WikiManager.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1303307456000</creationDate>
  <date>1303313050000</date>
  <contentUpdateDate>1303313050000</contentUpdateDate>
  <version>1.1</version>
  <title>Wikis Lucene Suggestion Service</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set($query = "$!request.query")
#set($input = "$!request.input")
#set($nb = "$!request.nb")
#if($nb != '')
  #set($nb = $mathtool.toInteger($nb) + 1)
#else
  #set($nb = 6)
#end
## Since Lucene doesn't support '*' or '?' as the first character we just remove it for now. Note that the SOLR
## search doesn't have this limitation
#set ($input = $stringtool.removeStart($input, '*'))
#set ($input = $stringtool.removeStart($input, '?'))
#if($query != '' &amp;&amp; $input != '')
  #set($query = $query.replaceAll('__INPUT__', $input))
  #set($discard = $response.setContentType("text/xml"))
  &lt;?xml version="1.0" encoding="UTF-8"?&gt;
  #set($rawresults = $xwiki.lucene.getSearchResults($query, $NULL))
  #set($results = $rawresults.getResults("0", "$nb"))
  &lt;results&gt;
    #foreach($item in $results)
      #set($wikiId = $item.name.replaceAll('XWikiServer', '').toLowerCase())
      #set($itemWikiDescriptor = $services.wiki.getById($wikiId))
      #set($name = $itemWikiDescriptor.prettyName)
      #set($url = $itemWikiDescriptor.mainPageReference)
      &lt;rs id="$url" info="${escapetool.xml(${itemWikiDescriptor.id})}:${escapetool.xml($itemWikiDescriptor.mainPageReference)}"&gt;$escapetool.xml($name)&lt;/rs&gt;
    #end
  &lt;/results&gt;
#else
{{info}}
This service allows to retrieve search results for the suggest UI component.
Examples:
* [[$doc.getExternalURL('get', 'outputSyntax=plain&amp;query=__INPUT__*&amp;input=test')]]
{{/info}}
#end
{{/velocity}}
</content>
</xwikidoc>
